/*User name: FUQ
Pass: FUQ*/


/* example
CREATE SEQUENCE emp_sequence
      INCREMENT BY 1
      START WITH 1
      NOMAXVALUE
      NOCYCLE
      CACHE 10;
*/


	/*SEQUENCE for ID field auto inc*/

CREATE SEQUENCE seq_User_ID
	MINVALUE 1
	START WITH 1
	INCREMENT BY 1;

CREATE SEQUENCE seq_SummerH_ID
	MINVALUE 1
	START WITH 1
	INCREMENT BY 1;

CREATE SEQUENCE seq_Rooms_ID
	MINVALUE 1
	START WITH 1
	INCREMENT BY 1;

CREATE SEQUENCE seq_Rent_ID
	MINVALUE 1
	START WITH 1
	INCREMENT BY 1;

	
	/*Tables*/

CREATE TABLE Rooms(
ID			INTEGER		NOT NULL,
Max_Beds	INTEGER,	/*CHECK (Max_Beds > 0)*/
Start_Date	DATE,
Duration	INTEGER,
Price		DECIMAL,

PRIMARY KEY	(ID)
);


/*1. Papildoma nuoma*/
CREATE TABLE Rent(
ID			INTEGER			NOT NULL,		/*is it really a needed field ???*/
Name		VARCHAR(15)		NOT NULL,
Description	VARCHAR(255),
Free_Place	INTEGER,						/*skaiciuot laisvom vietom, can be changed*/

PRIMARY KEY (ID)
);

/*2. Anketa  mb needed */
CREATE TABLE Poll(
Name		VARCHAR(20) NOT NULL,
Necessary	BOOLEAN

);

/*3. Nariu*/
CREATE TABLE Users(
ID		INTEGER		/*NOT NULL*/,
Name	VARCHAR(15),
Surname VARCHAR(45),
Nickname VARCHAR(20)	/*NOT NULL*/,
Password VARCHAR(40) /*NOT NULL*/,
Mail	VARCHAR(40) /*NOT NULL*/,
Phone	INTEGER,	
Sex	VARCHAR(10),
Status	VARCHAR(10),		/*to save 'kandidatas', 'narys'*/
Pay		BOOLEAN,

PRIMARY KEY	(ID)
);


/*4. Vasarnamiu*/
CREATE TABLE Summerhouse(
ID			INTEGER			NOT NULL,
Name		VARCHAR(15)		NOT NULL,
Description	VARCHAR(255),
Max_Rooms	INTEGER,

PRIMARY KEY	(ID)
);

--	Drop tables / sequince / triggers
/*
DROP TABLE Users;
DROP TABLE Summerhouse;
DROP TABLE Rent;
DROP TABLE Poll;

DROP seq_User_ID;
DROP seq_SummerH_ID;
DROP seq_Rent_ID;
*/